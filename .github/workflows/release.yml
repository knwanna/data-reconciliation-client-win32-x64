name: Build & Release (multi-OS, single Release)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate:
    name: Validate repo & config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate package.json references
        run: bash .github/scripts/ci-validate.sh

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: validate
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Validate (re-check)
        run: bash .github/scripts/ci-validate.sh

      - name: Install dependencies
        run: npm ci

      - name: Build (production)
        run: npm run dist

      - name: Compress artifacts (ultra)
        shell: bash
        run: |
          mkdir -p compressed
          if [ "${{ runner.os }}" = "Linux" ]; then
            tar -I 'zstd -19 -T0' -cf compressed/app-linux.tar.zst dist/ || ls -la dist || exit 0
          elif [ "${{ runner.os }}" = "macOS" ]; then
            tar -I 'zstd -19 -T0' -cf compressed/app-macos.tar.zst dist/ || ls -la dist || exit 0
          else
            # Windows: use 7z (preinstalled on windows-latest)
            powershell -Command "if (!(Test-Path compressed)) { New-Item -ItemType Directory -Path compressed }"
            7z a -t7z -mx=9 compressed/app-windows.7z dist\* || dir dist
          fi

      - name: Upload compressed artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-compressed
          path: compressed/*

  publish:
    name: Publish Release (collect artifacts)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-compressed
          path: artifacts/linux || true

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-compressed
          path: artifacts/macos || true

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-compressed
          path: artifacts/windows || true

      - name: Consolidate artifacts
        run: |
          mkdir -p release_assets
          cp -r artifacts/* release_assets/ || true
          ls -la release_assets || true

      - name: Generate SHA256 checksums
        run: |
          cd release_assets || exit 0
          for f in *; do
            if [ -f "$f" ]; then
              shasum -a 256 "$f" > "$f.sha256" || true
            fi
          done
          ls -la

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: release_assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
